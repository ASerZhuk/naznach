"use strict";(()=>{var e={};e.id=118,e.ids=[118],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},29674:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>P,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>d});var a=r(49303),n=r(88716),o=r(60670),i=r(53524),u=r(87070);let p=new i.PrismaClient;async function d(e){try{let{userId:t}=await e.json();if(!t)return u.NextResponse.json({message:"Необходимо передать userId"},{status:400});let r=await p.user.findUnique({where:{telegramId:t}});if(!r)return u.NextResponse.json({message:"Пользователь не найден"},{status:404});let s={...r,telegramId:r.telegramId.toString()};return u.NextResponse.json(s,{status:200})}catch(e){return console.error("Ошибка при получении данных пользователя:",e),u.NextResponse.json({message:"Ошибка сервера"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/getUser/route",pathname:"/api/getUser",filename:"route",bundlePath:"app/api/getUser/route"},resolvedPagePath:"D:\\Projects\\NEWWEBAPPTELEGA\\web-app\\src\\app\\api\\getUser\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:g,serverHooks:m}=l,x="/api/getUser/route";function P(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(29674));module.exports=s})();